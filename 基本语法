tcl是一个解释性语言，无需编译，每条语句顺次解释执行。

一、tcl环境设置：从 http://www.radioast.nsdc.cn/tools.php 下载TCL(for windows)软件，安装，系统会自动添加到全局变量。
   1、在cmd中输入tclsh或wish回车，可进入脚本解释器，在%后 输入命令回车，执行语句。
   2、文件: #HelloWorld.tcl
           #!D:/profession/bin/tclsh   编译器位置，一般不用添加
           puts "Hello World!"
      编译:
           E:\code\tcl> tclsh HelloWorld.tcl
           E:\code\tcl> Hello World!
           或E:\code\tcl> wish HelloWorld.tcl
           或是在解释器中执行：source HelloWorld.tcl
 
二、基本语法：Command args1 args2 ...
1、tcl常用命令：puts, set
2、tcl解释器在分析命令时，把所有的命令参数都当作字符串看待。
3、置换：
   变量置换：set x 10; set y $x+100   #由$符号标记变量置换，y的值为10+100
   命令置换：set y [expr $x+100]      #[]里的内容集合成一个命令名
   反斜杠置换：set y \$x+100;         #y值为$x+100
4、双引号和花括号
   双引号：除换行符; 以及两种置换符$和[]外，TCL解释器对双引号中的各种分割符将不作处理：set y "$x ddd"   #y的值为100 ddd
   花括号：对花括号中的所有特殊字符都不作处理：set y {/n$x [expr 10 +100]};                           #y的值为/n$x [expr 10 +100]
5、
命令行的终止：回车新起一行或用(;)
#注释
[]用来嵌套执行其他命令行
转义括号{}

三、变量：set a 1; puts $a;    #把1赋给变量a
        set b {$a}; puts $b  #把$a赋给变量b
        set a(1) 1; puts $a(1) #数组a索引为1的值被赋为1
        set a(b) 2; puts $a(b) ##数组a的索引b的值赋为2

四、列表和数组：set gates [split "AND.OR.NOT.NAND.NOR" "."]; puts $gates
        set 列表名 [lappend 列表名 特定元素];
        set $列表名 元素名;

五、表达式和运算符：expr 函数 数字;
   set x 10;
   puts [expr $x+10];
   自加关键字：incr 变量 数字;

六、控制流语句
1、列表遍历：foreach 变量名 $列表名[];
2、if语句：
   if{判别式}
     {语句}
   elseif{判别式}
     {语句}
   else
     {语句}
   Tcl还提供了break和continue与if语句结合，用于循环控制
3、for语句：
   for 初值 判别式 步长
     {执行语句}
4、while语句
   while 条件
     {执行语句}
5、过程（函数）定义
   proc 过程名{参数1 参数2 ...}
     {过程体
           return 参量}
   procedure程序：定义一个tcl程序就相当于定义了一个新的命令，使用时直接用程序名加与形参相对应的实参来调用

七、程序结构
source: 可以把一个外部的tcl文件在此处展开执行
global: 指定全局变量
proc: 子过程，后接过程名、参数列表、执行体



参考：
     https://blog.csdn.net/zhtysw/article/details/90516354
     https://www.zhihu.com/people/su-ming-ya/posts
     https://www.yiibai.com/tcl
